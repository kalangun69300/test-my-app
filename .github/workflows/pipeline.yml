name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write  #ให้สิทธิ์อัปโหลดผลไปยัง GitHub Security Tab

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter (ESLint)
        run: npm run lint || true

      - name: Run SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=kalangun69300_test-my-app \
            -Dsonar.organization=kalangun69300 \
            -Dsonar.sources=src \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.token="${{ secrets.SONAR_TOKEN }}"

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Auto Version
        id: version
        run: |
          VERSION="v${{ github.run_number }}.0"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Next version: $VERSION"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/test-my-app:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/test-my-app:latest

  security_scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Trivy to Scan Docker Image
        uses: aquasecurity/trivy-action@0.15.0
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/test-my-app:${{ env.VERSION }}'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-image-results.sarif'
